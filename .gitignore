# ReceiptName 项目 .gitignore 文件

# ===== Python 相关 =====
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws

# ===== 项目特定 =====
# 环境变量配置文件（包含敏感信息）
.env
.env.local
.env.production
.env.staging
.env.development
.env.test

# 日志文件
*.log
logs/
log/

# 临时文件
*.tmp
*.temp
temp/
tmp/
.tmp/

# 系统文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE 和编辑器
.vscode/
.idea/
*.swp
*.swo
*~
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# Cursor AI 编辑器
.cursor/
*.cursor-settings

# 操作系统
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# macOS
.AppleDouble
.LSOverride

# ===== PyInstaller 相关 =====
# 构建输出目录
build/
dist/

# PyInstaller 生成的 spec 文件（除了我们自定义的）
# 保留 pyinstaller_config.spec，忽略其他自动生成的
*.spec
!pyinstaller_config.spec

# ===== 开发工具 =====
# uv 包管理器
.uv/

# 测试相关
.pytest_cache/
.coverage
htmlcov/
.coverage.*
.tox/
.nox/

# 测试图片文件
test_image.*
test_image.jpg
test_image.png
test_image.jpeg
test_image.gif
test_image.bmp
test_image.tiff
test_image.webp

# 示例和测试图片文件（常见命名格式）
IMG_*.jpg
IMG_*.JPG
IMG_*.png
IMG_*.PNG
IMG_*.jpeg
IMG_*.JPEG
sample_*.jpg
sample_*.png
example_*.jpg
example_*.png

# 文档构建
docs/_build/
site/

# ===== 备份文件 =====
*.bak
*.backup
*.old
*.orig

# ===== 压缩文件 =====
*.zip
*.tar.gz
*.tar.bz2
*.tar.xz
*.rar
*.7z

# ===== 其他 =====
# 任何包含敏感信息的文件
*secret*
*private*
*key*
!env.example

# 运行时生成的文件
*.pid
*.seed
*.pid.lock

# 开发和调试文件
.repl_history
debug.log
debug_*.log

# ===== 项目特定忽略 =====
# 虚拟环境
.venv/

# 开发文档和计划文件（经常变动的工作文档）
开发计划.md
示例代码/大模型快速入门.md
示例代码/大模型结构化输出.md

# Python 版本文件（可选，取决于团队策略）
# .python-version

# ===== 图片处理相关 =====
# 处理后的图片文件
*_processed.*
*_renamed.*
*_output.*

# ===== 缓存文件 =====
.cache/
cache/
*.cache

# ===== 配置文件 =====
# 本地配置文件
config.local.py
settings.local.py

# ===== 数据文件 =====
# 数据文件（如果有的话）
data/
*.csv
*.json
*.xml
*.yaml
*.yml
!pyproject.toml
!uv.lock

# ===== 错误报告 =====
# 错误报告和崩溃转储
*.dmp
*.crash
error_logs/

# ===== 性能分析 =====
# 性能分析文件
*.prof
*.profile
*.stats

# ===== 安全相关 =====
# 证书和密钥文件
*.pem
*.key
*.crt
*.p12
*.pfx

# ===== 网络相关 =====
# 网络缓存和会话
.netrc
.cookies
*.session 